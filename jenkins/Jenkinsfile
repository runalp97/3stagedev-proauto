pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/runalp97/3stagedev-proauto.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t flaskapp:latest ./app'
            }
        }

        stage('Load to KinD') {
            steps {
                sh 'kind load docker-image flaskapp:latest --name devpro-auto'
            }
        }

        stage('Create Namespaces') {
            steps {
                sh '''
                kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -
                kubectl create namespace test --dry-run=client -o yaml | kubectl apply -f -
                kubectl create namespace prod --dry-run=client -o yaml | kubectl apply -f -
                '''
            }
        }

        stage('Deploy to Dev') {
            steps {
                sh 'kubectl apply -n dev -f k8s/dev/'
            }
        }

        stage('Approval for Test') {
            steps {
                input "Deploy to Test?"
            }
        }

        stage('Deploy to Test') {
            steps {
                sh 'kubectl apply -n test -f k8s/test/'
            }
        }

    stage('Run Tests in Test Environment') {
    steps {
        script {
            // Wait for the test deployment to be ready
            sh """
                echo "Waiting for test deployment to be ready..."
                kubectl rollout status deployment/flask-app-test -n test --timeout=60s
            """

            // Run test using an ephemeral curl pod inside the cluster
            sh """
                echo "Running test inside cluster..."
                kubectl run curl-test --rm -i --tty --image=curlimages/curl --restart=Never -- \
                  curl -s http://flask-test-browser.test.svc.cluster.local | grep -q "Hello" && echo "Test passed!" || (echo "Test failed!" && exit 1)
            """
        }
    }
}

        stage('Approval for Prod') {
            steps {
                input "Deploy to Prod?"
            }
        }

        stage('Deploy to Prod') {
            steps {
                sh 'kubectl apply -n prod -f k8s/prod/'
                sh 'kubectl apply -n prod -f k8s/prod/hpa.yaml'
            }
        }
    }

    post {
        always {
            input message: "Do you want to cleanup all namespaces?", ok: "Yes, cleanup"
            sh '''
            kubectl delete namespace dev --ignore-not-found
            kubectl delete namespace test --ignore-not-found
            kubectl delete namespace prod --ignore-not-found
            '''
        }
    }
}
