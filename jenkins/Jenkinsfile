pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/runalp97/3stagedev-proauto.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t flaskapp:latest ./app'
            }
        }

        stage('Load to KinD') {
            steps {
                sh 'kind load docker-image flaskapp:latest --name devpro-auto'
            }
        }

        stage('Create Namespaces') {
            steps {
                sh '''
                kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -
                kubectl create namespace test --dry-run=client -o yaml | kubectl apply -f -
                kubectl create namespace prod --dry-run=client -o yaml | kubectl apply -f -
                '''
            }
        }

        stage('Deploy to Dev') {
            steps {
                sh 'kubectl apply -n dev -f k8s/dev/'
            }
        }

        stage('Approval for Test') {
            steps {
                input "Deploy to Test?"
            }
        }

        stage('Deploy to Test') {
            steps {
                sh 'kubectl apply -n test -f k8s/test/'
            }
        }

       stage('Run Tests in Test Environment') {
    steps {
        script {
            // Start port-forwarding in background
            sh "kubectl port-forward svc/flask-test-browser -n test 30080:80 &"
            
            // Give port-forward some time to establish
            sh "sleep 5"
            
            // Run curl test to see if HTML contains expected text
            sh "curl -s http://localhost:30080 | grep -i 'Hello' || (echo 'Test failed!' && exit 1)"
            
            // Kill background port-forward process after test
            sh "pkill -f 'kubectl port-forward svc/flask-test-browser'"
        }
    }
}


        stage('Approval for Prod') {
            steps {
                input "Deploy to Prod?"
            }
        }

        stage('Deploy to Prod') {
            steps {
                sh 'kubectl apply -n prod -f k8s/prod/'
                sh 'kubectl apply -n prod -f k8s/prod/hpa.yaml'
            }
        }
    }

    post {
        always {
            input message: "Do you want to cleanup all namespaces?", ok: "Yes, cleanup"
            sh '''
            kubectl delete namespace dev --ignore-not-found
            kubectl delete namespace test --ignore-not-found
            kubectl delete namespace prod --ignore-not-found
            '''
        }
    }
}
